
# Each question type has 100 examples (question_id lists)
object_quantity_list = [1, 4, 9, 14, 18, 26, 30, 36, 40, 43, 46, 49, 54, 59, 62, 67, 71, 74, 78, 80, 85, 89, 90, 102, 103, 106, 108, 111, 124, 127, 131, 134, 135, 138, 144, 146, 152, 155, 159, 161, 168, 171, 174, 180, 185, 189, 194, 197, 204, 206, 210, 215, 217, 223, 226, 229, 234, 235, 243, 248, 255, 256, 261, 265, 268, 269, 272, 278, 283, 287, 291, 295, 300, 304, 311, 315, 321, 327, 331, 342, 345, 357, 360, 365, 368, 373, 378, 382, 386, 387, 390, 397, 405, 411, 425, 433, 444, 448, 451, 459]

object_position_list = [3, 5, 11, 16, 20, 21, 31, 33, 41, 44, 45, 48, 50, 52, 58, 61, 64, 66, 75, 76, 79, 83, 84, 86, 92, 105, 107, 110, 113, 116, 119, 123, 129, 139, 140, 149, 153, 160, 173, 176, 177, 178, 192, 195, 198, 202, 207, 208, 211, 212, 213, 218, 224, 227, 228, 230, 233, 236, 238, 244, 246, 249, 251, 254, 257, 259, 260, 263, 271, 276, 277, 281, 282, 284, 293, 301, 302, 307, 309, 317, 333, 336, 343, 350, 352, 361, 369, 371, 372, 375, 381, 385, 388, 389, 396, 410, 429, 430, 446, 447]

object_direction_list = [13, 290, 346, 358, 362, 393, 406, 662, 841, 869, 916, 1542, 1550, 1564, 1697, 1719, 1797, 1885, 1971, 2060, 2085, 2273, 2402, 2480, 2520, 2583, 2588, 2674, 2718, 2762, 2817, 2833, 2989, 2999, 3021, 3547, 3922, 4447, 5155, 5157, 5297, 5363, 5374, 5494, 5549, 5568, 5704, 5714, 5794, 6147, 6154, 6267, 6380, 6396, 6439, 6443, 6457, 6470, 6508, 6510, 6519, 6645, 6746, 6831, 6836, 6879, 6905, 6953, 7012, 7049, 7266, 7408, 7671, 7766, 7769, 7799, 7815, 7861, 7866, 7894, 7939, 7948, 7991, 8050, 8059, 8231, 8239, 8252, 8267, 8282, 8343, 8390, 8463, 8479, 8489, 8511, 8528, 8549, 8787, 8799]

object_size_list = [22, 96, 120, 187, 188, 221, 286, 399, 537, 584, 604, 611, 622, 627, 629, 650, 667, 709, 711, 725, 796, 828, 900, 938, 962, 1092, 1117, 1162, 1171, 1196, 1210, 1264, 1300, 1309, 1364, 1405, 1482, 1568, 1876, 1926, 1936, 1944, 1959, 1960, 1970, 1975, 1977, 1981, 1999, 2005, 2097, 2098, 2122, 2130, 2133, 2155, 2178, 2181, 2206, 2212, 2215, 2223, 2230, 2242, 2484, 2528, 2541, 2546, 2547, 2552, 2558, 2671, 2679, 2708, 2716, 2730, 2747, 2816, 2821, 2887, 2933, 2937, 2955, 3003, 3015, 3063, 3129, 3160, 3221, 3225, 3226, 3245, 3267, 3337, 3387, 3413, 3440, 3468, 3473, 3504]

reasoning_list = [57, 63, 109, 128, 220, 367, 455, 461, 518, 522, 551, 588, 672, 721, 730, 736, 749, 757, 774, 840, 883, 890, 894, 1005, 1036, 1044, 1076, 1113, 1131, 1223, 1334, 1388, 1500, 1504, 1702, 1749, 2042, 2088, 2126, 2276, 2338, 2464, 2467, 2699, 2702, 2713, 2808, 2858, 3077, 3169, 3177, 3375, 3398, 3469, 3487, 3562, 3564, 3600, 3728, 3899, 3911, 3914, 3915, 3992, 4001, 4201, 4532, 4899, 4911, 5030, 5031, 5055, 5071, 5084, 5095, 5099, 5134, 5142, 5163, 5164, 5176, 5197, 5199, 5205, 5206, 5207, 5270, 5359, 5362, 5400, 5401, 5417, 5418, 5426, 5434, 5458, 5570, 5612, 5619, 5768]

object_color_list = [0, 10, 17, 24, 53, 69, 73, 88, 91, 94, 114, 121, 122, 143, 156, 164, 166, 201, 241, 273, 312, 320, 337, 355, 366, 370, 380, 392, 398, 403, 412, 417, 428, 432, 439, 454, 460, 464, 477, 485, 487, 489, 498, 506, 512, 516, 523, 526, 529, 530, 533, 545, 576, 582, 592, 600, 610, 654, 657, 669, 676, 687, 694, 697, 732, 745, 748, 756, 833, 838, 842, 849, 861, 867, 871, 876, 889, 895, 913, 923, 956, 980, 991, 997, 1011, 1020, 1037, 1042, 1053, 1075, 1107, 1126, 1130, 1138, 1146, 1182, 1190, 1218, 1231, 1236]

object_existence_list = [2, 6, 12, 15, 19, 25, 27, 29, 32, 37, 42, 51, 55, 60, 81, 82, 87, 99, 101, 104, 115, 118, 136, 137, 142, 147, 154, 158, 163, 165, 167, 169, 172, 181, 183, 186, 199, 200, 216, 222, 225, 237, 240, 245, 250, 253, 262, 264, 266, 267, 270, 274, 279, 280, 289, 294, 296, 297, 305, 310, 314, 318, 323, 324, 326, 329, 334, 338, 353, 356, 359, 364, 374, 379, 384, 391, 394, 400, 401, 404, 414, 416, 420, 422, 423, 426, 437, 438, 441, 443, 449, 450, 458, 462, 466, 467, 473, 478, 482, 483]

object_category_list = [7, 8, 23, 28, 35, 38, 47, 56, 65, 72, 97, 100, 112, 117, 132, 141, 145, 148, 150, 151, 157, 175, 184, 190, 191, 193, 203, 205, 209, 214, 219, 232, 242, 258, 285, 288, 292, 298, 303, 316, 319, 322, 328, 332, 335, 341, 344, 348, 351, 363, 383, 402, 407, 413, 419, 421, 431, 440, 442, 453, 476, 484, 495, 502, 508, 515, 520, 524, 527, 534, 552, 556, 561, 562, 571, 574, 577, 579, 585, 590, 615, 617, 632, 639, 645, 648, 659, 660, 666, 673, 678, 682, 684, 698, 701, 723, 763, 790, 802, 819]

object_shape_list = [34, 95, 133, 162, 182, 231, 306, 308, 313, 325, 339, 408, 409, 415, 418, 424, 434, 435, 445, 474, 479, 488, 500, 503, 510, 625, 670, 693, 722, 724, 734, 744, 831, 846, 977, 1024, 1132, 1142, 1157, 1181, 1187, 1229, 1233, 1255, 1258, 1275, 1339, 1451, 1466, 1472, 1503, 1518, 1532, 1548, 1623, 1631, 1685, 1732, 1740, 1768, 1790, 1798, 1808, 1856, 1875, 1878, 1888, 1893, 1897, 1898, 1923, 2004, 2011, 2053, 2104, 2113, 2120, 2166, 2169, 2216, 2224, 2256, 2269, 2351, 2386, 2420, 2426, 2428, 2517, 2530, 2561, 2565, 2684, 2686, 2764, 2773, 2810, 2836, 2843, 2851]

scene_type_list = [39, 77, 93, 98, 126, 130, 170, 179, 196, 239, 247, 252, 275, 299, 340, 349, 354, 376, 377, 395, 427, 436, 456, 457, 493, 507, 555, 560, 564, 567, 569, 578, 589, 594, 620, 624, 626, 655, 691, 704, 740, 743, 762, 776, 783, 799, 806, 815, 829, 834, 843, 872, 879, 887, 899, 910, 1009, 1050, 1074, 1082, 1085, 1119, 1147, 1154, 1164, 1172, 1202, 1206, 1208, 1215, 1221, 1225, 1242, 1249, 1287, 1289, 1293, 1294, 1302, 1307, 1319, 1383, 1394, 1404, 1427, 1436, 1456, 1460, 1463, 1467, 1488, 1498, 1514, 1519, 1528, 1554, 1569, 1573, 1605, 1620]

def get_question_ids(question_type, num_questions):
    """Get the list of question_ids in each question type."""

    if question_type == "object_quantity":
        return object_quantity_list[:num_questions]
    elif question_type == "object_position":
        return object_position_list[:num_questions]
    elif question_type == "object_direction":
        return object_direction_list[:num_questions]
    elif question_type == "object_size":
        return object_size_list[:num_questions]
    elif question_type == "reasoning":
        return reasoning_list[:num_questions]
    elif question_type == "object_color":
        return object_color_list[:num_questions]
    elif question_type == "object_existence":
        return object_existence_list[:num_questions]
    elif question_type == "object_category":
        return object_category_list[:num_questions]
    elif question_type == "object_shape":
        return object_shape_list[:num_questions]
    elif question_type == "scene_type":
        return scene_type_list[:num_questions]
    else:
        raise ValueError(f"Invalid question type: {question_type}")